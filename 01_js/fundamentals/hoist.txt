1
console.log(hello);                                   
var hello = 'world';  
--> will throw error because logging hello before var hello is defined


2
var needle = 'haystack';
test();
function test(){
    var needle = 'magnet';
    console.log(needle);
}
--> will throw error because function call before function definition

3
var brendan = 'super cool';
function print(){
    brendan = 'only okay';
    console.log(brendan);
}
console.log(brendan);
--> will print 'super cool'; never called print()

4
var food = 'chicken';
console.log(food);
eat();
function eat(){
    food = 'half-chicken';
    console.log(food);
    var food = 'gone';
}
--> will throw error because function called before definition

5
mean();
console.log(food);
var mean = function() {
    food = "chicken";
    console.log(food);
    var food = "fish";
    console.log(food);
}
console.log(food);
--> will throw error because function called before definition

6
console.log(genre);
var genre = "disco";
rewind();
function rewind() {
    genre = "rock";
    console.log(genre);
    var genre = "r&b";
    console.log(genre);
}
console.log(genre);
--> will throw error because print happens before variable declared

7
dojo = "san jose";
console.log(dojo);
learn();
function learn() {
    dojo = "seattle";
    console.log(dojo);
    var dojo = "burbank";
    console.log(dojo);
}
console.log(dojo);
--> "san jose"  --need to move function call to below function definition

8 - Bonus ES6: const
console.log(makeDojo("Chicago", 65));
console.log(makeDojo("Berkeley", 0));
function makeDojo(name, students){
    const dojo = {};
    dojo.name = name;
    dojo.students = students;
    if(dojo.students > 50){
        dojo.hiring = true;
    }
    else if(dojo.students <= 0){
        dojo = "closed for now";
    }
    return dojo;
}
--> {name: "Chicago", students: 65, hiring: true}
--> error because dojo="closed for now" can't be assigned to **const** dojo={}